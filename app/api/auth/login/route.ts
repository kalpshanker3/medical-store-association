import { NextRequest, NextResponse } from 'next/server'
import { supabase } from '@/lib/supabase'
import bcrypt from 'bcrypt'

export async function POST(request: NextRequest) {
  try {
    const { phone, password } = await request.json()

    if (!phone || !password) {
      return NextResponse.json(
        { success: false, message: "рдлреЛрди рдирдВрдмрд░ рдФрд░ рдкрд╛рд╕рд╡рд░реНрдб рдЖрд╡рд╢реНрдпрдХ рд╣реИрдВ" },
        { status: 400 }
      )
    }

    console.log("ЁЯФР API Login attempt for:", phone)

    // Find user by phone number
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('*')
      .eq('phone', phone)
      .single()

    if (userError || !user) {
      console.log("тЭМ User not found:", phone)
      return NextResponse.json(
        { success: false, message: "рдлреЛрди рдирдВрдмрд░ рдпрд╛ рдкрд╛рд╕рд╡рд░реНрдб рдЧрд▓рдд рд╣реИ" },
        { status: 401 }
      )
    }

    // Check if user is approved
    if (user.status !== 'active' && user.status !== 'approved') {
      console.log("тЭМ User not approved:", user.status)
      return NextResponse.json(
        { success: false, message: "рдЖрдкрдХрд╛ рдЕрдХрд╛рдЙрдВрдЯ рдЕрднреА рд╕реНрд╡реАрдХреГрдд рдирд╣реАрдВ рд╣реБрдЖ рд╣реИ" },
        { status: 403 }
      )
    }

    // Verify password
    if (!user.password_hash) {
      console.log("тЭМ No password hash found")
      return NextResponse.json(
        { success: false, message: "рдкрд╛рд╕рд╡рд░реНрдб рд╕реЗрдЯ рдирд╣реАрдВ рд╣реИ" },
        { status: 401 }
      )
    }

    const isPasswordValid = await bcrypt.compare(password, user.password_hash)
    
    if (!isPasswordValid) {
      console.log("тЭМ Invalid password")
      return NextResponse.json(
        { success: false, message: "рдлреЛрди рдирдВрдмрд░ рдпрд╛ рдкрд╛рд╕рд╡рд░реНрдб рдЧрд▓рдд рд╣реИ" },
        { status: 401 }
      )
    }

    console.log("тЬЕ Login successful for user:", user.name)
    return NextResponse.json({
      success: true,
      user,
      message: "рд▓реЙрдЧрд┐рди рд╕рдлрд▓"
    })

  } catch (error) {
    console.error("тЭМ Error in login API:", error)
    return NextResponse.json(
      { success: false, message: "рд▓реЙрдЧрд┐рди рдореЗрдВ рддреНрд░реБрдЯрд┐ рд╣реБрдИ" },
      { status: 500 }
    )
  }
} 